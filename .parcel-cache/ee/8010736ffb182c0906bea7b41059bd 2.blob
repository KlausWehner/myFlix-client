var helpers = require("../../../../../../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoginView", ()=>LoginView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _loginViewScss = require("./login-view.scss");
var _s = $RefreshSig$();
function LoginView(props) {
    _s();
    const [username, setUsername] = _react.useState("");
    const [password, setPassword] = _react.useState("");
    const { user  } = this.useState;
    const handleSubmit = (e)=>{
        e.preventDefault();
        _axiosDefault.default.post("https://klaus-movie-api.herokuapp.com/login", {
            Username: username,
            Password: password
        }).then((response)=>{
            const data = response.data;
            props.onLoggedIn(data);
        }).catch((e1)=>{
            console.log("No such user");
        });
    };
    if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(LoginView, {
        onLoggedIn: (user1)=>this.onLoggedIn(user1)
        ,
        goToRegistration: ()=>this.goToRegistration()
        ,
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 32
        },
        __self: this
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 39
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        bg: "secondary",
        controlId: "formUsername",
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 40
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        as: "h2",
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 41
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        size: "lg",
        type: "text",
        placeholder: "...",
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 42
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formPassword",
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 50
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        as: "h2",
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 51
        },
        __self: this
    }, "Password:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        size: "lg",
        type: "password",
        placeholder: "...",
        value: password,
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 52
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "outline-dark",
        size: "lg",
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 61
        },
        __self: this
    }, "Submit"), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "outline-dark",
        size: "lg",
        type: "submit",
        onClick: ()=>{
            this.onLoggedOut();
        },
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 70
        },
        __self: this
    }, "Logout"), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "outline-dark",
        size: "lg",
        type: "submit",
        onClick: props.goToRegistration,
        __source: {
            fileName: "/Users/klauswehner2/Documents/WEB-Design-Dev/CareerFOUNDRY/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 81
        },
        __self: this
    }, "No account? Register here!")));
}
_s(LoginView, "Lrw7JeD9zj6OUWhT/IH4OIvPKEk=");
_c = LoginView;
LoginView.propTypes = {
    user: _propTypesDefault.default.shape({
        Username: _propTypesDefault.default.string.isRequired,
        Password: _propTypesDefault.default.string.isRequired
    }).isRequired,
    onLoggedIn: _propTypesDefault.default.func.isRequired,
    goToRegistration: _propTypesDefault.default.func
};
var _c;
$RefreshReg$(_c, "LoginView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}